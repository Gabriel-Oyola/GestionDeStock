@page "/Productos"

@inject IHttpService http

<a class="btn btn-primary" href="/Productos/Crear"> Nuevo Producto</a>

<h3>ListaProductos</h3> 

<p>Bienvenido al sistema de carga de productos</p> 

<table>
    <tr>
        <th>Codigo</th>
        <th>Nombre</th> 
        <th>Descripcion</th> 
        <th>Stock</th>
    </tr>
@if (productos == null)
    {
        <tr>Cargando...</tr>
    }
    else if (productos.Count == 0)
    {
        <tr>No existen datos</tr>
    }
    else
    {
        @foreach(var item in productos)
        {
          <tr>
              <td>@item.CodigoProducto</td>
              <td>@item.NombreProducto</td>
              <td>@item.DescripcionProducto</td>
              <td>@item.Stock</td>
              <td>
                  <a class="btn btn-primary" href="/Productos/Editar/@item.Id"> Editar</a>
              </td>

              <td>
                  <button class="btn btn-warning" @onclick="()=>Eliminar(item)">
                      Eliminar

                  </button>
              </td>
          </tr> 
        }
    }



</table>

<Confirmacion @ref="confirmacion"
verCancelar="true" 
verOk="true" textCancelar="Cancelar" onCancel="cancelar" onConfirm="Borrar">
<div>
    El producto @ProductoBorrar.NombreProducto sera eliminado. 
    <br/> 
    ¿Esta seguro que desea continuar?
</div> 

</Confirmacion>
@code {
    List<Producto> productos;
    Producto ProductoBorrar;
    Confirmacion confirmacion; 

    protected override async Task OnInitializedAsync()
    {
        base.OnInitializedAsync(); 
        await Leer(); 
    }

    private async Task Leer()
    {

        var respuesta = await http.Get<List<Producto>>("api/GestionStock");
        if (!respuesta.Error)
        {
            productos = respuesta.Respuesta;
        }
    }

    private void Eliminar(Producto productoBorrar)
    {
        ProductoBorrar = productoBorrar; 
        confirmacion.Ver(); 
    }
    private void cancelar()
    {
        confirmacion.Ocultar();
        ProductoBorrar = null; 
    }
    private async Task Borrar()
    {
        var respuesta = await http.Delete($"api/GestionStock/{ProductoBorrar.Id}");
        if (respuesta.Error)
        {
            var body = "Error"; 

        }
        cancelar(); 
        await Leer(); 
    }
}
